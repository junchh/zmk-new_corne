#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&mt { tapping-term-ms = <150>; };

&lt { tapping-term-ms = <150>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&caps_word>;

            tapping-term-ms = <150>;
        };

        modtapbalance: modtapbalance {
            compatible = "zmk,behavior-hold-tap";
            label = "MODTAPBALANCE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "balanced";
        };

        layertapbalance: layertapbalance {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAPBALANCE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "balanced";
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <16 17>;
            layers = <0>;
            timeout-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        abc_layer {
            display-name = "ABC";
            bindings = <
&none  &kp Q  &kp W  &kp E  &kp R                        &kp T                                      &kp UP                &kp Y      &kp U                         &kp I      &kp O    &kp P                     &none
&none  &kp A  &kp S  &kp D  &modtapbalance LEFT_SHIFT F  &kp G                            &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &modtapbalance RIGHT_SHIFT J  &kp K      &kp L    &td0                      &none
&none  &kp Z  &kp X  &kp C  &kp V                        &kp B               &kp SPACE              &kp DOWN              &kp N      &kp M                         &kp COMMA  &kp DOT  &layertapbalance 3 SLASH  &none
                     &none  &lt 1 TAB                    &mt LCMD BACKSPACE                                               &kp SPACE  &lt 2 ENTER                   &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        symbol_layer {
            display-name = "SYM";
            bindings = <
&none  &kp GRAVE        &kp TILDE      &kp BACKSLASH  &kp PIPE              &kp HOME                                             &mmv MOVE_UP                     &kp END           &kp LESS_THAN      &kp GREATER_THAN  &kp QUESTION       &kp COLON  &none
&none  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH       &kp DOLLAR            &kp PERCENT                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp UNDERSCORE    &kp MINUS          &kp PLUS   &none
&none  &kp CARET        &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL  &none
                                       &none          &mo 1                 &none                                                                                 &kp SPACE         &kp ENTER          &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        extra_layer {
            bindings = <
&none  &none            &kp N7        &kp N8        &kp N9        &kp HOME                             &trans          &kp END    &none      &none      &none      &none                     &none
&none  &kp LC(LS(TAB))  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LC(TAB)                  &trans  &trans  &trans  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp LS(LG(NUMBER_4))      &none
&none  &kp LC(H)        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LC(L)          &trans            &trans          &kp LC(C)  &kp LC(D)  &kp LC(U)  &none      &kp LS(LC(LG(NUMBER_4)))  &none
                                      &none         &kp N0        &kp LA(BACKSPACE)                                    &none      &mo 2      &none
            >;

            label = "EXTRA";
        };

        window_manager {
            bindings = <
&none  &none           &kp LA(N7)        &kp LA(N8)        &kp LA(N9)        &none                    &trans          &kp LA(Q)  &kp LA(W)  &kp LA(E)  &kp LA(R)  &none  &none
&none  &kp LEFT_SHIFT  &kp LA(NUMBER_4)  &kp LA(N5)        &kp LA(NUMBER_6)  &none            &trans  &trans  &trans  &kp LA(H)  &kp LA(J)  &kp LA(K)  &kp LA(L)  &none  &none
&none  &none           &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &none  &trans            &trans          &none      &none      &none      &none      &none  &none
                                         &none             &none             &none                                    &none      &none      &none
            >;

            label = "WM";
        };
    };
};
